name: Deploy to server using rsync and symlink

inputs:
  SERVER_SSH_KEY:
    type: string
    description: 'Server SSH key'
    required: true
  SERVER_USER:
    description: 'Server used for deployment'
    required: true
  SERVER_HOST:
    description: 'Server host for deployment'
    required: true
  SERVER_ROOT:
    description: 'Server root directory for deployment'
    required: true
  SERVER_PORT:
    description: 'Server port for deployment'
    required: true
  RELEASES_TO_KEEP:
    type: string
    description: 'Number of releases to keep. Minimal number is 1.'
    default: 10
  RELEASES_FOLDER:
    type: string
    description: 'Releases folder name'
    default: 'releases'
  SSM_DEPLOY:
    type: boolean
    description: 'Use AWS SSM tunnel for deployment'
    default: false
  AWS_REGION:
    type: string
    description: 'AWS region for SSM tunnel'
    default: ""
  AWS_ROLE:
    type: string
    description: 'AWS role for SSM tunnel'
    default: ""

runs:
  using: composite
  steps:
    - name: Setup variables
      id: variablesSetup
      shell: bash
      run: |
        echo "NOW=$(date +'%Y%m%d%H%M%S')" >> "$GITHUB_OUTPUT"

    - name: Configure AWS Credentials
      if: ${{ inputs.SSM_DEPLOY }}
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.AWS_ROLE }}
        aws-region: ${{ inputs.AWS_REGION }}

    # Setup SSH configuration so deploy action connects to the instance over SSM proxy
    - name: Setup ssh config for SSM
      if: ${{ inputs.SSM_DEPLOY }}
      shell: bash
      run: |
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        cat > ~/.ssh/config << 'EOF'
        # SSH over Session Manager
        host i-* mi-*
          StrictHostKeyChecking no
          ProxyCommand sh -c "aws ssm start-session --target %h --document-name AWS-StartSSHSession --parameters 'portNumber=%p'"
        EOF

    - name: Add server SSH key
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ inputs.SERVER_SSH_KEY }}

    - name: Zip everything for deployment
      shell: bash
      run: zip -rq ${{ steps.variablesSetup.outputs.NOW }}.zip .

    - name: Deploy with rsync
      shell: bash
      run: rsync -avz -e 'ssh -p ${{ inputs.SERVER_PORT }} -o StrictHostKeyChecking=no' ./${{ steps.variablesSetup.outputs.NOW }}.zip ${{ inputs.SERVER_USER }}@${{ inputs.SERVER_HOST }}:${{ inputs.SERVER_ROOT }}

    - name: Symlink the new version
      shell: bash
      run: |
        ssh -p ${{ inputs.SERVER_PORT }} -o StrictHostKeyChecking=no ${{ inputs.SERVER_USER }}@${{ inputs.SERVER_HOST }} "
          cd ${{ inputs.SERVER_ROOT }} &&
          mkdir -p ${{ inputs.RELEASES_FOLDER }} &&
          mkdir -p shared/uploads &&
          mkdir -p shared/languages &&
          mkdir -p shared/wflogs &&
          unzip -q ${{ steps.variablesSetup.outputs.NOW }}.zip -d ${{ inputs.RELEASES_FOLDER }}/${{ steps.variablesSetup.outputs.NOW }} &&
          rm -f ${{ steps.variablesSetup.outputs.NOW }}.zip &&
          rm -rf current &&
          ln -s ${{ inputs.RELEASES_FOLDER }}/${{ steps.variablesSetup.outputs.NOW }} current &&
          ln -s ../../../shared/uploads current/wp-content/uploads &&
          ln -s ../../../shared/languages current/wp-content/languages &&
          ln -s ../../../shared/wflogs current/wp-content/wflogs
        "

    - name: Cleanup old releases
      uses: infinum/eightshift-deploy-actions-public/.github/actions/ssh/releases-cleanup@hotfix/ssm-deploy
      with:
        RELEASES_TO_KEEP: ${{ inputs.RELEASES_TO_KEEP }}
        SERVER_SSH_KEY: ${{ inputs.SERVER_SSH_KEY }}
        SERVER_USER: ${{ inputs.SERVER_USER }}
        SERVER_HOST: ${{ inputs.SERVER_HOST }}
        SERVER_ROOT: ${{ inputs.SERVER_ROOT }}
        SERVER_PORT: ${{ inputs.SERVER_PORT }}
        RELEASES_FOLDER: ${{ inputs.RELEASES_FOLDER }}
        SSM_DEPLOY: ${{ inputs.SSM_DEPLOY }}
        AWS_REGION: ${{ inputs.AWS_REGION }}
        AWS_ROLE: ${{ inputs.AWS_ROLE }}
